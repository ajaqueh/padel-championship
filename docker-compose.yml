# docker-compose.yml

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:14
    container_name: padel_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: padel_championship
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - padel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: padel_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: padel_championship
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - padel_network
    volumes:
      - ./backend/uploads:/app/uploads
    command: sh -c "npm run migrate && npm run seed && npm start"

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: padel_frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - padel_network

volumes:
  postgres_data:

networks:
  padel_network:
    driver: bridge




# .env.example

# See .env.example for environment variable configuration.

# frontend/.env.example

# See frontend/.env.example for environment variable configuration.

# init.sql

# El archivo init.sql debe estar en la raíz y contener el script de inicialización de la base de datos.
# No incluya SQL ni comentarios aquí; docker-compose.yml solo admite sintaxis YAML.

# backend/tsconfig.json

# See backend/tsconfig.json for TypeScript configuration.

# frontend/tsconfig.json

# See frontend/tsconfig.json for TypeScript configuration.

# frontend/tailwind.config.js

# See frontend/tailwind.config.js for Tailwind CSS configuration.

# frontend/src/index.css

# See frontend/src/index.css for Tailwind CSS and custom styles.


